version: '3.2'
services:
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/load-balancer.conf:/etc/nginx/conf.d/load-balancer.conf ro
      - ./log:/var/log/nginx
    ports:
      - "8080:80"
    environment:
      - NGINX_PORT=80
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.6.0
    hostname: filebeat
    networks:
      - elk
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./log:/usr/share/services/nginx
    deploy:
      mode: replicated
      replicas: 1

  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:2888:3888
    ports:
      - 2181:2181
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka1:29092, LISTENER_EXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 29092:29092
      - 9092:9092
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka2:39092, LISTENER_EXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 39092:39092
      - 9093:9093
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka3:49092, LISTENER_EXT://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 49092:49092
      - 9094:9094
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch1
      discovery.seed_hosts: elasticsearch2,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
  
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch2
      discovery.seed_hosts: elasticsearch1,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch3
      discovery.seed_hosts: elasticsearch1,elasticsearch2
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata03:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.0
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - lsdata01:/usr/share/logstash/data
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    volumes:
      - kdata01:/usr/share/kibana/data
    environment:
      ELASTICSEARCH_URL: http://elasticsearch1:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch1:9200
    ports:
      - "5601:5601"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1


volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  lsdata01:
    driver: local
  kdata01:
    driver: local

networks:
  elk:
    external: true
